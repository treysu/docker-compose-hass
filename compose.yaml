---
x-general: &general
  init: true
  restart: unless-stopped
  env_file:
    - path: default.env
      required: false
  labels:
    - autoheal=true
    - com.centurylinklabs.watchtower.enable=true

x-healthcheck: &healthcheck
  healthcheck:
    test: curl google.com || exit 1
    interval: 30s
    timeout: 10s
    retries: 3

x-automation: &automation
  environment:
    - TEST=TEST # Unused
    #- PUID=1000
    #- PGID=1000
  #user: "1000:1000"

name: homeassistant

services:
  #-----------------------------------------
  home-assistant:
    <<: [*general, *healthcheck, *automation]
    init: false
    container_name: homeassistant
    hostname: homeassistant
    image: ghcr.io/home-assistant/home-assistant:stable
    privileged: true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/docker-data/hass/config:/config
      - /run/dbus:/run/dbus:ro
    network_mode: host

  #-----------------------------------------
  music-assistant:
    <<: [*general, *automation]
    container_name: music-assistant
    hostname: music_assistant
    image: ghcr.io/music-assistant/server
    #network_mode: host
    ports:
      - 8095:8095
      - 8096:8096
      - 8097:8097
    volumes:
      - /mnt/docker-data/music-assistant:/data

  #-----------------------------------------
  esphome:
    <<: [*general, *automation]
    container_name: esphome
    image: esphome/esphome
    network_mode: host
    #ports:
    #  - 6052:6052
    volumes:
      - /mnt/docker-data/esphome/config:/config
      - /etc/localtime:/etc/localtime:ro

  #-----------------------------------------
  espresense-companion:
    <<: [*general, *automation]
    container_name: espresense-companion
    image: espresense/espresense-companion
    ports:
      - 8267:8267
    volumes:
      - /mnt/docker-data/espresense:/config/espresense

  #-----------------------------------------
  zigbee2mqtt:
    <<: [*general, *automation]
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt
    ports:
      # Frontend port
      - 8022:8080
    volumes:
      - /mnt/docker-data/zigbee2mqtt:/app/data
      - /run/udev:/run/udev:ro
      - /etc/localtime:/etc/localtime:ro

  #-----------------------------------------
  govee2mqtt:
    <<: [*general, *automation]
    image: ghcr.io/wez/govee2mqtt:latest
    container_name: govee2mqtt
    ports:
      - 8056:8056
    env_file:
      - default.env
      - govee.env

    #----------------------------------------
  mosquitto:
    <<: [*general, *automation]
    container_name: mosquitto
    stdin_open: true
    tty: true
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/docker-data/mosquitto:/mosquitto
    image: eclipse-mosquitto

  #-----------------------------------------
  snapcast:
    <<: [*general, *automation]
    init: false
    container_name: snapcast
    image: docker.io/sweisgerber/snapcast:latest
    hostname: snapcast
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000 # set to audio group ID
      - TZ=US/Mountain
      - START_SNAPCLIENT=false # set to `true` for snapclient to start
      # --host: name or ip of compose service or dockerhost
      # --soundcard: <ID> from `snapclient -l` from inside the container
      # - SNAPCLIENT_OPTS=--host snapcast --soundcard <ID>
      #   => Don't use quotes for SNAPCLIENT_OPTS="" !
      # - HOST_AUDIO_GROUP=<AUDIO-GID> # set to GID of host audio group
    #ports:
    #  - 1704:1704
    #  - 1705:1705
    #  - 1780:1780
    # devices:
    # - /dev/snd:/dev/snd # optional, only if you want to use snapclient
    volumes:
      - /mnt/docker-data/snapcast/config/:/config/
      - /mnt/docker-data/snapcast/data/:/data/
      # /audio should get used to place FIFOs for audio playback from mpd/mopidy/host/etc
      - /tmp/audio-fifos/:/audio/

  #-------------------------------------
  openwakeword:
    <<: [*general]

    image: homeassistant/amd64-addon-openwakeword:latest
    container_name: openwakeword
    hostname: openwakeword
    entrypoint: python3
    command: >
      -m wyoming_openwakeword   --uri 'tcp://0.0.0.0:10400' --preload-model 'ok nabu'   --debug   --custom-model-dir /share/openwakeword
    ports:
      - 10400:10400
    environment:
      - PUID=1004
      - PGID=1006
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/docker-data/openwakeword/data:/data
      - /mnt/docker-data/openwakeword/custom-model-dir:/share/openwakeword

  #-------------------------------------
  piper:
    <<: [*general, *healthcheck, *automation]
    image: homeassistant/amd64-addon-piper:latest
    container_name: piper
    entrypoint: python3
    command: >
      -m wyoming_piper    --piper '/usr/share/piper/piper'    --uri 'tcp://0.0.0.0:10200'    --length-scale "1"    --noise-scale "0.667"    --speaker "0"  --debug --voice en_US-lessac-medium  --max-piper-procs "1"    --data-dir /data    --data-dir /share/piper    --download-dir /data
    ports:
      - "10200:10200"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/docker-data/piper:/data

  #----------------------------------------
  faster-whisper:
    <<: [*general, *automation]
    init: false
    image: lscr.io/linuxserver/faster-whisper:latest
    container_name: faster-whisper
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - WHISPER_MODEL=tiny-int8
      - WHISPER_BEAM=1 #optional
      - WHISPER_LANG=en #optional
    volumes:
      - /mnt/docker-data/whisper/config:/config
    ports:
      - 10300:10300
